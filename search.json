[{"path":"https://covalenceresearch.github.io/covalencer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 covalencer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johannes Pöhlmann. Author, maintainer. Covalence Research Ltd. Copyright holder, funder.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pöhlmann J (2023). covalencer: Miscellaneous Functions Themes Use Covalence Research. R package version 0.0.0.9000, https://covalenceresearch.github.io/covalencer/.","code":"@Manual{,   title = {covalencer: Miscellaneous Functions and Themes in Use at Covalence Research},   author = {Johannes Pöhlmann},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://covalenceresearch.github.io/covalencer/}, }"},{"path":"https://covalenceresearch.github.io/covalencer/index.html","id":"covalencer-","dir":"","previous_headings":"","what":"Miscellaneous Functions and Themes in Use at Covalence Research","title":"Miscellaneous Functions and Themes in Use at Covalence Research","text":"covalencer contains various R functions use Covalence Research health economic modeling, literature synthesis, medical communication, just plain old data wrangling. Perhaps notably, provides access Covalence ggplot theme associated color palettes.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install","title":"Miscellaneous Functions and Themes in Use at Covalence Research","text":"can install development version covalencer GitHub :","code":"# install.packages(\"pak\") pak::pkg_install(\"CovalenceResearch/covalencer\")"},{"path":"https://covalenceresearch.github.io/covalencer/index.html","id":"how-to-use","dir":"","previous_headings":"","what":"How to use","title":"Miscellaneous Functions and Themes in Use at Covalence Research","text":"Please note package much work progress, things likely break (deliberately deliberately). Use package risk.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/index.html","id":"ggplot-theme","dir":"","previous_headings":"How to use","what":"ggplot theme","title":"Miscellaneous Functions and Themes in Use at Covalence Research","text":"Apply theme_covalence() existing ggplot object, like theme:","code":"library(ggplot2) library(covalencer)  ggplot(data = diamonds, aes(x = price, y = carat)) +     geom_point(aes(color = color), alpha = 0.5) +     scale_colour_covalence_d(palette = \"complete\") +     facet_wrap(vars(cut)) +     theme_covalence()"},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Covalence colors — covalence_colors","title":"Covalence colors — covalence_colors","text":"Covalence brand colors, including primary colors ('lightblue', 'darkblue', 'teal', 'grey') accent colors ('red', 'green', 'purple', 'orange').","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covalence colors — covalence_colors","text":"","code":"covalence_colors(...)"},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covalence colors — covalence_colors","text":"... Access specific colors","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covalence colors — covalence_colors","text":"named vector brand colors","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covalence colors — covalence_colors","text":"function taken 2022 blog post Meghan Hall.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covalence colors — covalence_colors","text":"","code":"covalence_colors(\"darkblue\") #>  darkblue  #> \"#326aa0\""},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Covalence palette — covalence_palette","title":"Covalence palette — covalence_palette","text":"various Covalence palettes: complete palette contains brand colors. main palette contains main, mostly blue-ish, brand colors. accent palette contains additional, prominent colors.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covalence palette — covalence_palette","text":"","code":"covalence_palette(..., palette = c(\"complete\", \"main\", \"accent\"))"},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covalence palette — covalence_palette","text":"... Arguments passed . palette Palette use. One 'complete', 'main', 'accent'.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covalence palette — covalence_palette","text":"named vector brand colors.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_palette.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covalence palette — covalence_palette","text":"function slightly modified 2022 blog post Meghan Hall.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/covalence_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covalence palette — covalence_palette","text":"","code":"require(scales) #> Loading required package: scales show_col(covalence_palette(palette = \"main\"))"},{"path":"https://covalenceresearch.github.io/covalencer/reference/generate_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Function factory to generate palette — generate_pal","title":"Function factory to generate palette — generate_pal","text":"function generates second function, use 'ggplot' scales.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/generate_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function factory to generate palette — generate_pal","text":"","code":"generate_pal(palette, n, type = \"discrete\", reverse = FALSE)"},{"path":"https://covalenceresearch.github.io/covalencer/reference/generate_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function factory to generate palette — generate_pal","text":"palette Palette use. One 'complete', 'main', 'accent'. n Number colors wanted palette. type Type palette. Either 'discrete' 'continuous'. reverse palette reversed? Either 'TRUE' 'FALSE'.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/generate_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function factory to generate palette — generate_pal","text":"palette-generating function.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/generate_pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function factory to generate palette — generate_pal","text":"function slightly modified 2022 blog post Nicola Rennie.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/plot_psa_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot incremental outcomes on the cost-effectiveness plane — plot_psa_scatter","title":"Plot incremental outcomes on the cost-effectiveness plane — plot_psa_scatter","text":"plot_psa_scatter takes data.frame incremental quality-adjusted life-years (QALYs) incremental costs, might obtained probabilistic sensitivity analysis, plots data incremental cost-effectiveness plane.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/plot_psa_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot incremental outcomes on the cost-effectiveness plane — plot_psa_scatter","text":"","code":"plot_psa_scatter(   data,   delta_qalys,   delta_costs,   currency = \"$\",   point_alpha = 0.4,   point_color = \"#249bc9\",   point_shape = 16,   point_size = 2,   point_jitter_height = 0,   point_jitter_width = 0,   plot_wtp_at = NULL,   wtp_alpha = 1,   wtp_color = \"#154754\",   wtp_linetype = \"dashed\",   wtp_linewidth = 0.5,   show_mean = TRUE,   mean_alpha = 1,   mean_color = \"#7a0d66\",   mean_shape = 18,   mean_size = 3 )"},{"path":"https://covalenceresearch.github.io/covalencer/reference/plot_psa_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot incremental outcomes on the cost-effectiveness plane — plot_psa_scatter","text":"data data.frame. delta_qalys Unquoted column name incremental QALYs. delta_costs Unquoted column name incremental costs. currency String currency symbol. Default $. point_alpha Numeric value point opacity. Default 0.4. point_color Point color. Default #249bc9. point_shape Integer value point shape. Default 16. See ?pch available shapes. point_size Numeric value point size. Default 2. point_jitter_height, point_jitter_width Numeric value vertical horizontal jittering. Default 0 (jittering). careful key-outcome pairs may plotted much jitter. plot_wtp_at Numeric value plot WTP threshold. default, argument NULL WTP threshold plotted. wtp_alpha Numeric value WTP threshold line opacity. Default 1. wtp_color Color WTP threshold line. Default #154754. wtp_linetype valid specification WTP threshold line type. Default dashed (2). See ggplot2 documentation valid options. wtp_linewidth Numeric value WTP threshold line width. Default 0.5. show_mean Boolean indicating mean incremental QALYs costs displayed (point). Default TRUE. mean_alpha Numeric value mean point opacity. Default 1. mean_color Color mean point. Default #7a0d66. mean_shape Integer value mean point shape. Default 18. See ?pch available shapes. mean_size Numeric value point size. Default 3.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/plot_psa_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot incremental outcomes on the cost-effectiveness plane — plot_psa_scatter","text":"ggplot object","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/plot_psa_scatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot incremental outcomes on the cost-effectiveness plane — plot_psa_scatter","text":"Fore information display incremental outcomes cost-effectiveness plane, see, example, Fenwick et al., 2006.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/plot_psa_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot incremental outcomes on the cost-effectiveness plane — plot_psa_scatter","text":"","code":"library(ggplot2) df <- data.frame(d_qalys = runif(1000, -1, 2),                  d_costs = runif(1000, -1000, 10000),                  country = rep(c(\"Country A\", \"Country B\"), each = 500))  # Standard plot (without WTP threshold) plot_psa_scatter(df, d_qalys, d_costs) #> ℹ No WTP threshold is plotted.   # Now with a WTP threshold of 20,000 plot_psa_scatter(df, d_qalys, d_costs, plot_wtp_at = 20000) #> ℹ The WTP threshold is plotted at $20000 per QALY gained.   # Facet plot by adding a call to facet_plot/facet_grid plot_psa_scatter(df, d_qalys, d_costs, plot_wtp_at = 20000) +   facet_wrap(vars(country)) #> ℹ The WTP threshold is plotted at $20000 per QALY gained.   # Don't forget that column names should be unquoted if (FALSE) {   plot_psa_scatter(df, \"d_qalys\", \"d_costs\") }"},{"path":"https://covalenceresearch.github.io/covalencer/reference/scale_colour_covalence_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Covalence color and fill scales for ggplot2 — scale_colour_covalence_d","title":"Covalence color and fill scales for ggplot2 — scale_colour_covalence_d","text":"scale_*_covalence_* functions provide discrete (_d) continuous (_c) scales Covalence colors use ggplot2 plots.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/scale_colour_covalence_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covalence color and fill scales for ggplot2 — scale_colour_covalence_d","text":"","code":"scale_colour_covalence_d(palette = \"complete\", reverse = FALSE)  scale_color_covalence_d(palette = \"complete\", reverse = FALSE)  scale_fill_covalence_d(palette = \"complete\", reverse = FALSE)  scale_colour_covalence_c(palette = \"complete\", reverse = FALSE)  scale_color_covalence_c(palette = \"complete\", reverse = FALSE)  scale_fill_covalence_c(palette = \"complete\", reverse = FALSE)"},{"path":"https://covalenceresearch.github.io/covalencer/reference/scale_colour_covalence_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covalence color and fill scales for ggplot2 — scale_colour_covalence_d","text":"palette Palette use. One 'complete', 'main', 'accent'. reverse palette reversed? Either 'TRUE' 'FALSE'.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/scale_colour_covalence_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covalence color and fill scales for ggplot2 — scale_colour_covalence_d","text":"Discrete/continuous color/fill scales ggplot2.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/scale_colour_covalence_d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covalence color and fill scales for ggplot2 — scale_colour_covalence_d","text":"functions inspired 2022 blog post Nicola Rennie.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/scale_colour_covalence_d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covalence color and fill scales for ggplot2 — scale_colour_covalence_d","text":"","code":"library(ggplot2)  ggplot(data = diamonds, aes(x = carat, y = price)) +   geom_point(aes(color = cut), alpha = 0.4) +   scale_color_covalence_d(palette = \"complete\") +   theme_covalence()   ggplot(data = diamonds, aes(x = carat, y = price)) +   geom_point(aes(color = x), alpha = 0.4) +   scale_colour_covalence_c(palette = \"complete\") +   theme_covalence()   ggplot(data = diamonds, aes(x = price)) +   geom_histogram(aes(fill = cut)) +   scale_fill_covalence_d(palette = \"complete\", reverse = TRUE) +   theme_covalence() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://covalenceresearch.github.io/covalencer/reference/stat_doublemean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mean of two variables — stat_doublemean","title":"Calculate the mean of two variables — stat_doublemean","text":"Calculate arithmetic mean two variables, subsequent use call geom_point().","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/stat_doublemean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mean of two variables — stat_doublemean","text":"","code":"stat_doublemean(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://covalenceresearch.github.io/covalencer/reference/stat_doublemean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mean of two variables — stat_doublemean","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data, either ggproto Geom subclass string naming geom stripped geom_ prefix (e.g. \"point\" rather \"geom_point\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/stat_doublemean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mean of two variables — stat_doublemean","text":"'ggplot2' stat.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/stat_doublemean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the mean of two variables — stat_doublemean","text":"code stat layer heavily based extending ggplot2 vignette.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/stat_doublemean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mean of two variables — stat_doublemean","text":"","code":"library(ggplot2)  ggplot(diamonds, aes(x = carat, y = price)) +   geom_point() +   stat_doublemean(color = \"#249bc9\", shape = 18, size = 3)"},{"path":"https://covalenceresearch.github.io/covalencer/reference/theme_covalence.html","id":null,"dir":"Reference","previous_headings":"","what":"The default Covalence ggplot2 theme — theme_covalence","title":"The default Covalence ggplot2 theme — theme_covalence","text":"theme provides defaults required generate plots, using ggplot2, aligned Covalence Research house style. theme can modified using theme(). Also consider using various color palettes ensure house style met.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/theme_covalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default Covalence ggplot2 theme — theme_covalence","text":"","code":"theme_covalence(   base_size = 12,   base_family = \"sans\",   strip_bg_color = \"#FFFFFF\",   strip_text_color = \"#326aa0\",   ... )"},{"path":"https://covalenceresearch.github.io/covalencer/reference/theme_covalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The default Covalence ggplot2 theme — theme_covalence","text":"base_size Base font size, points. Default 12. base_family Base font family. Default \"sans\". strip_bg_color Color fill strip backgrounds. Default #326aa0. strip_text_color Color strip labels. Default #FFFFFF (white). ... Additional arguments passed theme","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/theme_covalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The default Covalence ggplot2 theme — theme_covalence","text":"ggplot2 theme object.","code":""},{"path":"https://covalenceresearch.github.io/covalencer/reference/theme_covalence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The default Covalence ggplot2 theme — theme_covalence","text":"","code":"library(ggplot2)  ggplot(data = msleep, aes(x = brainwt, y = bodywt)) +    geom_point() +    theme_covalence() #> Warning: Removed 27 rows containing missing values (`geom_point()`).   ggplot(data = diamonds, aes(x = price, y = carat)) +    geom_point(color = covalence_colors(\"lightblue\"), alpha = 0.4) +    facet_wrap(vars(cut)) +    theme_covalence()"}]
